name: Release jar

on:
  workflow_dispatch:
  release:
    types: [created]
permissions:
  contents: read

jobs:
  read_versions:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versionNumber.outputs.versionNumber }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Get version number
      - name: Get version number
        id: versionNumber
        run: |
          VERSION=$(grep '^version=' version.properties | cut -d'=' -f2)
          echo "versionNumber=$VERSION" >> $GITHUB_OUTPUT

  build:
    needs: read_versions
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versionNumber.outputs.versionNumber }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up JDK 21
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: "21"
          distribution: "temurin"
          cache: 'gradle'

      - name: Set execute permissions for Gradle Wrapper
        run: chmod +x gradlew

      - uses: gradle/actions/setup-gradle@8379f6a1328ee0e06e2bb424dadb7b159856a326 # v4.4.0
        with:
          gradle-version: 8.14

      - name: Generate jar
        run: ./gradlew clean build

      # Get version number
      - name: Get version number
        id: versionNumber
        run: |
          VERSION=$(grep '^version=' version.properties | cut -d'=' -f2)
          echo "versionNumber=$VERSION" >> $GITHUB_OUTPUT

      - run: |
          ls -R build/libs
      - name: Rename binaries
        run: |
          mkdir ./binaries
          mv "./build/libs/swaggerhub-V2-${{ needs.read_versions.outputs.version }}.jar" ./binaries/swaggerhub-V2-${{ steps.versionNumber.outputs.versionNumber }}.jar

      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          retention-days: 1
          if-no-files-found: error
          name: jar-binaries
          path: |
            ./binaries/*

  sign_verify:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Download build artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: jar-binaries

      - name: Display structure of downloaded files
        run: ls -R

      - name: Install Cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2

      - name: Generate key pair
        run: cosign generate-key-pair

      - name: Sign and generate attestations
        run: |
          cosign sign-blob \
            --key ./cosign.key \
            --yes \
            --output-signature ./swaggerhub-V2-${{ needs.build.outputs.version }}.jar.sig \
            ./swaggerhub-V2-${{ needs.build.outputs.version }}.jar

          cosign attest-blob \
            --predicate - \
            --key ./cosign.key \
            --yes \
            --output-attestation ./swaggerhub-V2-${{ needs.build.outputs.version }}.jar.intoto.jsonl \
            ./swaggerhub-V2-${{ needs.build.outputs.version }}.jar

          cosign verify-blob \
            --key ./cosign.pub \
            --signature ./swaggerhub-V2-${{ needs.build.outputs.version }}.jar.sig \
            ./swaggerhub-V2-${{ needs.build.outputs.version }}.jar

      - name: Display structure of downloaded files
        run: ls -R

      - name: Upload signed artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          retention-days: 1
          if-no-files-found: error
          name: jar-signed
          path: |
            ./swaggerhub-V2-${{ needs.build.outputs.version }}.*
            !cosign.*

  create-release:
    needs: [build, sign_verify]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Download signed artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      - name: Display structure of downloaded files
        run: ls -R
      - name: Upload binaries, attestations and signatures to Release and create GitHub Release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          tag_name: v${{ needs.build.outputs.version }}
          generate_release_notes: true
          files: |
            ./*signed/*

  update-version:
    needs: [create-release, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Generate GitHub App Token
        id: generate-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.generate-token.outputs.app-slug }}[bot]" --jq .id)" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - id: committer
        run: |
          echo "string=${{ steps.generate-token.outputs.app-slug }}[bot] <${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com>" >> "$GITHUB_OUTPUT"

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}

      - name: Set up git config
        run: |
          git config --global user.name "${{ steps.generate-token.outputs.app-slug }}[bot]"
          git config --global user.email "${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com"

      - name: Update version in version.properties
        run: |
          CURRENT_VERSION=$(grep '^version=' version.properties | cut -d'=' -f2)
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          PATCH=$(( ${VERSION_PARTS[2]} + 1 ))
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"
          sed -i "s/^version=.*/version=$NEW_VERSION/" version.properties
          echo "Updated version from $CURRENT_VERSION to $NEW_VERSION"

      - name: git add
        run: |
          git add version.properties
          git diff --staged --quiet || echo "CHANGES_DETECTED=true" >> $GITHUB_ENV

      - name: Commit and Push Changes
        if: env.CHANGES_DETECTED == 'true'
        run: |
          git commit -m "Update version to v${{ needs.build.outputs.version }}"
          git push
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
